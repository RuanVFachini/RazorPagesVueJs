@page "/Alunos/{handler?}/{id?}"

@namespace razor_web_pages.Pages

@model AlunosModel

@Html.AntiForgeryToken()

<div id="alunos-grid">
    <vue-grid 
        v-bind:columns="columns"
        v-bind:data="data">
        <vue-grid-toolbar>
            <template v-slot:left>
                <div class="btn-group" role="group" aria-label="Basic outlined example">
                    <b-button type="button" class="btn btn-outline-primary" @@click="onCreate">Criar</b-button>
                    <b-button type="button" class="btn btn-outline-primary" @@click="onUpdate">Editar</b-button>
                    <b-button type="button" class="btn btn-outline-primary" @@click="onRemove">Remover</b-button>
                </div>
            </template>
        </vue-grid-toolbar>
    </vue-grid>

    <vue-alunos-crud
        id="alunos-crud"
        title-create="'Criação de novo aluno'"
        title-update="'Atualização de aluno'"
        v-bind:data="selected"
        v-bind:path="pagePath"
        v-model="show"
        v-bind:onSaveResult="onSaveResult">
    </vue-alunos-crud>
</div>

@section Scripts {

    <partial name="~/Pages/VueComponents/_Grid.cshtml" />
    <partial name="~/Pages/VueComponents/_GridToolBar.cshtml" />
    <partial name="~/Pages/Alunos/VueComponents/_Crud.cshtml" />

    <script type="text/javascript">

    var app = new Vue({
        el: '#alunos-grid',
        data() {
            return  {
                columns: @JsObjectParser.ToJsObject(Model.Columns),
                data: @JsObjectParser.ToJsObject(Model.Records),
                selected: null,
                pagePath: "/Alunos",
                show: false
            }
        },
        methods: {
            onCreate: function (event) {
                this.selected = {}
                this.show = true
            },
            onUpdate: function (event) {
                this.show = true
            },
            onRemove: function (event) {
                if (hasValue(this.selected?.Id)) {
                    deleteAluno()
                } else {
                    alert('Selecione um registro para deletar')
                }
            },
            onSaveResult: function (event) {
                if (event.success) {
                    console.log(event)
                } else {
                    alert('Ocorreu um erro ao salvar o registro')
                }
            },
        }
    })

    function deleteAluno() {
        return AjaxPost(
            app.pagePath,
            "delete/" + this.selected?.Id)
            .done((success) => {
                app.data.splice(app.data.indexOf(x => x.id == app.SelectedId))
            })
            .fail((failure) => {
                alert('Erro na requisição')
            })
    }

    </script>
}