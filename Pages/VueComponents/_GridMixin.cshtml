<style>
  .vue-grid {
    display: flex;
    flex-direction: column;
  }

  .grid-top-slot {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .custom-pagination {
    margin-top: 10px;
    flex: 1;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
  }

  .pagination-display{
    margin-left: 5px;
  }

  .custom-pagination ul {
    margin-bottom: 1px;
    margin-left: 5px;
  }
</style>

<script type="text/javascript">
    function GetGridMixin() {
      return {
        data: function() {
          return {
            fields:[],
            items:[],
            totalRows: 0,
            isBusy: false,
            selected: null,
            currentPage: 1,
            filter: {
              skip: 0,
              maxResult: 20,
              sort: null
            }
          }
        },
        template: '#vue-grid-template',
        methods: {
          onSelect(lines) {
            this.selected = lines.length > 0 ? lines[0] : null
            this.$emit('select', this.selected)
          },
          onSort(tableCtx) {
            let sort = tableCtx.sortDesc ? '-' : '+'
            sort = sort + tableCtx.sortBy
            this.filter.sort = sort
            this.filter.skip = 0
            this.load()
            this.currentPage = 1
          },
          isBusyToggle () {
            this.isBusy = !this.isBusy
          },
          load() {
            loadExternalData(this)
          }
        },
        mounted() {
          this.load()
        },
        computed: {
          paginationInfo() {
              let current = this.filter.skip + 1
              let maxResult = current + this.filter.maxResult - 1
              maxResult = maxResult > this.totalRows ? this.totalRows : maxResult
              return `${current} - ${maxResult}`
          }
        },
        watch: {
          currentPage(value, oldValue){
            this.filter.skip = this.filter.maxResult * (this.currentPage - 1)
            this.load()
          }
        }
      }
    };

    function loadExternalData(component) {
      component.isBusyToggle();
      return AjaxGet(
          component.path,
          'List',
          component.filter)
        .done((data) => {
            component.items = data.items
            component.totalRows = data.total
        })
        .fail((failure) => {
            console.log('Falha ao obtar dados do servidor', failure)
        })
        .always(() => {
          component.isBusyToggle()
        })
    }
</script>

<script type="text/template" id="vue-grid-template">
  <div class="vue-grid">
    <div class="grid-top-slot">
      <slot name="table-toolbar">
      </slot>
      <slot name="table-pagination">
        <div class="custom-pagination">
          <ul 
            class="pagination mt-1 b-pagination">
            <li class="page-item disabled bv-d-xs-down-none">
              <span class="page-link grid-info">{{paginationInfo}}</span>
            </li>
            <li class="page-item disabled bv-d-xs-down-none">
              <span class="page-link">de</span>
            </li>
            <li class="page-item disabled bv-d-xs-down-none">
              <span class="page-link grid-info">{{totalRows}}</span>
            </li>
          </ul>
          <b-pagination
              class="mt-1"
              v-model="currentPage"
              :total-rows="totalRows"
              :per-page="filter.maxResult">
          </b-pagination>
        </div>
      </slot>
    </div>
    <b-table 
      id="studants-grid"
      class="mt-1"
      :items="items" 
      :busy="isBusy" 
      :fields="fields" 
      :hover="true"
      :selectable="true"
      :select-mode="'single'"
      :per-page="0"
      :label-sort-asc="''"
      :label-sort-desc="''"
      :label-sort-clear="''"
      :no-local-sorting="true"
      :sort-by="'id'"
      :sort-desc="false"
      @@row-selected="onSelect"
      @@sort-changed="onSort"
      outlined>
      <template #table-busy>
        <div class="text-center text-danger my-2">
          <b-spinner class="align-middle"></b-spinner>
          <strong>Loading...</strong>
        </div>
      </template>
    </b-table>
  </div>
</script>